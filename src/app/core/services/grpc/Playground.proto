syntax = "proto3";

package coding.playground;
option java_multiple_files = true;
option java_package = "com.codecampus.coding.grpc.playground";
option java_outer_classname = "PlaygroundProto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";


message RunRequest {
  string language = 1; // "python" | "cpp" | "java"
  string source_code = 2;
  string stdin = 3; // optional
  int32  memory_mb = 4; // default 256
  float  cpus = 5; // default 0.5
  int32  time_limit_sec = 6; // default 5
}

message RunUpdate {
  enum Phase {
    PHASE_UNSPECIFIED = 0;
    STARTED = 1;
    COMPILING = 2;
    COMPILE_OUT = 3;
    COMPILE_ERR = 4;
    RUNNING = 5;
    STDOUT = 6;
    STDERR = 7;
    FINISHED = 8;
    ERROR = 9;
  }

  Phase phase = 1;
  string chunk = 2; // 1 dòng/1 mẩu log/1 block stdout
  int32  exit_code = 3; // set khi FINISHED/ERROR
  int32  runtime_ms = 4; // set khi FINISHED
  int32  memory_kb = 5; // optional, nếu đo được
  google.protobuf.Timestamp ts = 6;
}


service PlaygroundService {
  // Server-streaming: gửi log/STDOUT theo thời gian thực
  rpc Run (RunRequest) returns (stream RunUpdate);

  // (Tuỳ chọn) Hủy job nếu client không kịp cancel stream
  rpc Cancel (google.protobuf.Empty) returns (google.protobuf.Empty);
}