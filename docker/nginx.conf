server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  # Cho phép upload lớn đi qua frontend proxy
  client_max_body_size 1g;
  client_body_timeout 600s;

  # Proxy API -> gateway-service
  location /api/ {
    proxy_pass http://gateway-service:8888/api/v1/;
    proxy_http_version 1.1;

    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";

    # WebSocket/SSE
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
  }

  # ===== Public MinIO proxy (ẩn nội bộ, public qua /s3) =====
  location ^~ /s3/ {
    proxy_pass http://minio:9000/;
    proxy_http_version 1.1;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Streaming file lớn/HLS
    proxy_request_buffering off;
    proxy_buffering off;
    proxy_read_timeout 600s;

    # Cache nhẹ cho ảnh/tệp tĩnh
    add_header Cache-Control "public, max-age=31536000, immutable";

    # HLS thường benefit từ cache control
    location ~ \.m3u8$ { add_header Cache-Control "no-cache"; }
    location ~ \.ts$   { add_header Cache-Control "public, max-age=31536000, immutable"; }
  }

  # ===== WebSocket bridges (nội bộ qua Docker network) =====
  # Coding runner WS
  location /ws/code/ {
    proxy_pass http://coding-service:4098/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 600s;
  }

  # Chat WS
  location /ws/chat/ {
    proxy_pass http://chat-service:4099/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 600s;
  }

  # Notification WS
  location /ws/notify/ {
    proxy_pass http://notification-service:4101/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 600s;
  }

  # Cache
  location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|woff2?|ttf|map)$ {
    try_files $uri =404;
    access_log off;
    add_header Cache-Control "public, max-age=31536000, immutable";
  }

  # SPA fallback
  location / {
    try_files $uri $uri/ @spa;
  }

    location @spa {
      # đẩy mọi route về index.html 1 lần, tránh lặp
      add_header Cache-Control "no-store";
      rewrite ^ /index.html last;
    }

    # (tuỳ chọn) chặn listing thư mục
    autoindex off;
}
